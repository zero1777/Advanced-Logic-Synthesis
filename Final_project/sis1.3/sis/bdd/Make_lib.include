# This file is intended to be included in Makefiles.  It contains
# things which are common to Makefiles which build object libraries.

# compilation flags
INCLUDE = -I. -I$(CURRENT)/include
DBGFLAG =   # empty now, but assign -g for debugging
OPTFLAG =   # empty now, but assign -O for optimization
PACKFL	=   # flags peculiar to individual packages, empty now, to be assigned in the package's makefile.
CFLAGS = $(OPTFLAG) $(DBGFLAG) $(PACKFL) $(INCLUDE)

# object files
OBJ = $(SRC:.c=.o)

# library names
LIB  = lib$(NAME).a
LIBG = lib$(NAME)-g.a
LIB_ALL = lib_all

# debug library (default); it's assumed that if there are current .o files 
# present, they were compiled with -g. This assumption is maintained by
# removing the .o files before and after the other library builds.
$(LIBG): $(SRC) $(HDR)
	$(MAKE) $(MFLAGS) MAKE=$(MAKE) CURRENT=$(CURRENT) CC=$(CC) DBGFLAG=-g make_libg
	chmod 0775 $(LIBG) $(OBJ)

lib: 
	$(MAKE) $(MFLAGS) MAKE=$(MAKE) CURRENT=$(CURRENT) CC=$(CC) $(LIB)

make_libg : $(OBJ)
	ar cr $(LIBG) $?
	ranlib $(LIBG)

# optimized libary
$(LIB): $(SRC) $(HDR)
	rm -f $(OBJ)
	$(MAKE) $(MFLAGS) MAKE=$(MAKE) CURRENT=$(CURRENT) CC=$(CC) OPTFLAG=-O make_lib
#	rm -f $(OBJ)
#	chmod 0775 $(LIB) 

make_lib: $(OBJ)
	ar cr $(LIB) $?
	ranlib $(LIB)

# make all the libaries; remember that LIBG uses any .o files present.
$(LIB_ALL):
	$(MAKE) $(MFLAGS) MAKE=$(MAKE) CURRENT=$(CURRENT) CC=$(CC) $(LIB)
	$(MAKE) $(MFLAGS) MAKE=$(MAKE) CURRENT=$(CURRENT) CC=$(CC) $(LIBG)

# remove object files and previous versions
clean: 
	rm -f *~ *.o *.a *.BAK *JNL

make-new-link:
				ln -s ../../../common/src/$(NAME)/* .

